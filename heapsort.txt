Heap Sort:
    - When using Heap Sort to sort an array, we start by creating a max heap from the array. This ensures that the largest element in the array is at the top. Then, we take the largest element from the heap and move it to the end of the array. We repeat this process for the remaining elements until the entire array is sorted.

    - Heap Sort is a sorting algorithm that works in-place, meaning it doesn't require extra memory, and has a worst-case time complexity of O(n(log n)).


Complexity Analysis:
    -Time Complexity:
        -Best Case: O(n)

        -Average case: 1/2(n*log(n)-n+O(log(n)))

        -Worst Case: O(n(log n))

    -Space Complexity: O(1) - its an in place sorting algorithm.

    -Stability: not stable - heap sort may change the relative order of equal elements.


References:
-https://iq.opengenus.org/time-complexity-of-heap-sort/

-https://www.geeksforgeeks.org/java-program-for-heap-sort/?ref=gcse